Cloning the repository

First of all, start by cloning the GitHub repository in your system.

git clone https://github.com/EGA-archive/beacon2-ri-api.git

Creating the containers

Create the external docker network needed before building the containers.

docker network create my-app-network

Make sure the next list of ports are free of use in your system:
27017 → mongo
8081 → mongo-express
5050 → beacon
5051 → permissions
8010 → permissions UI
8080 → Keycloak
9991 → Keycloak SSL
3000 → Beacon UI

Light up the containers from the deploy folder.

cd deploy && docker-compose up -d --build

If the containers are built correctly:
The API will run in http://localhost:5050/api.
The Beacon UI will run in http://localhost:3000.
The mongo-express UI will run in http://localhost:8081.
The Keycloak UI will run in http://localhost:8080/auth.

Data injection

Copy all the available BFF files to the mongo container using the following commands:

docker cp /path/to/analyses.json rimongo:tmp/analyses.json
docker cp /path/to/biosamples.json rimongo:tmp/biosamples.json
docker cp /path/to/cohorts.json rimongo:tmp/cohorts.json
docker cp /path/to/datasets.json rimongo:tmp/datasets.json
docker cp /path/to/genomicVariations.json rimongo:tmp/genomicVariations.json
docker cp /path/to/individuals.json rimongo:tmp/individuals.json
docker cp /path/to/runs.json rimongo:tmp/runs.json

Note that not all the above commands are needed to run a beacon. A beacon can run without data or data for a single collection (e.g. only individuals).

Now execute the insertion of the files copied into the mongo database.

docker exec rimongo mongoimport --jsonArray --uri 'mongodb://root:example@127.0.0.1:27017/beacon?authSource=admin' --file /tmp/datasets.json --collection datasets
docker exec rimongo mongoimport --jsonArray --uri 'mongodb://root:example@127.0.0.1:27017/beacon?authSource=admin' --file /tmp/analyses.json --collection analyses
docker exec rimongo mongoimport --jsonArray --uri 'mongodb://root:example@127.0.0.1:27017/beacon?authSource=admin' --file /tmp/biosamples.json --collection biosamples
docker exec rimongo mongoimport --jsonArray --uri 'mongodb://root:example@127.0.0.1:27017/beacon?authSource=admin' --file /tmp/cohorts.json --collection cohorts
docker exec rimongo mongoimport --jsonArray --uri 'mongodb://root:example@127.0.0.1:27017/beacon?authSource=admin' --file /tmp/genomicVariations.json --collection genomicVariations
docker exec rimongo mongoimport --jsonArray --uri 'mongodb://root:example@127.0.0.1:27017/beacon?authSource=admin' --file /tmp/individuals.json --collection individuals
docker exec rimongo mongoimport --jsonArray --uri 'mongodb://root:example@127.0.0.1:27017/beacon?authSource=admin' --file /tmp/runs.json --collection runs


Data indexing

For the API to respond fast to the queries, you have to index your database. You can create the necessary indexes by running the next script:

docker exec beacon python beacon/reindex.py

Note that you will need to run this script each time you inject new data.