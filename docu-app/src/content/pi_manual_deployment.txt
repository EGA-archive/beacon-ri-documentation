Beacon 2 PI API - Manual Deployment

Cloning the Repository
First of all, start by cloning the GitHub repository in your system.

```bash
git clone https://github.com/EGA-archive/beacon2-pi-api.git
```

Creating the Containers
Make sure the next list of ports are free of use in your system:
- 27017 → mongo
- 8081 → mongo-express (optional)
- 5050 → beacon
- 8080 → Keycloak (optional)
- 9991 → Keycloak SSL (optional)

Light up the containers from the deploy folder.

```bash
docker compose up -d --build
```

If you wish to light up only some of the services, not all, just write the name of the services in the `docker-compose.yml` file right after the command (e.g., for having the mandatory services only):

```bash
docker compose up -d –build beaconprod db
```

If the containers are built correctly:
- The API will run in [http://localhost:5050/api](http://localhost:5050/api).
- The mongo-express UI will run in [http://localhost:8081](http://localhost:8081).
- The Keycloak UI will run in [http://localhost:8080/auth](http://localhost:8080/auth).

Data Injection
Copy all the available BFF files you have to the [data folder for mongo database](https://github.com/EGA-archive/beacon2-pi-api/tree/main/beacon/connections/mongo/data).

**Note:** A beacon can run without data or data for a single collection (e.g., only individuals).

Now execute the insertion of the files copied into the mongo database.

```bash
docker exec mongoprod mongoimport --jsonArray --uri "mongodb://root:example@127.0.0.1:27017/beacon?authSource=admin" --file /data/datasets.json --collection datasets
docker exec mongoprod mongoimport --jsonArray --uri "mongodb://root:example@127.0.0.1:27017/beacon?authSource=admin" --file /data/individuals.json --collection individuals
docker exec mongoprod mongoimport --jsonArray --uri "mongodb://root:example@127.0.0.1:27017/beacon?authSource=admin" --file /data/cohorts.json --collection cohorts
docker exec mongoprod mongoimport --jsonArray --uri "mongodb://root:example@127.0.0.1:27017/beacon?authSource=admin" --file /data/analyses.json --collection analyses
docker exec mongoprod mongoimport --jsonArray --uri "mongodb://root:example@127.0.0.1:27017/beacon?authSource=admin" --file /data/biosamples.json --collection biosamples
docker exec mongoprod mongoimport --jsonArray --uri "mongodb://root:example@127.0.0.1:27017/beacon?authSource=admin" --file /data/genomicVariations.json --collection genomicVariations
docker exec mongoprod mongoimport --jsonArray --uri "mongodb://root:example@127.0.0.1:27017/beacon?authSource=admin" --file /data/runs.json --collection runs
docker exec mongoprod mongoimport --jsonArray --uri "mongodb://root:example@127.0.0.1:27017/beacon?authSource=admin" --file /data/targets.json --collection targets
docker exec mongoprod mongoimport --jsonArray --uri "mongodb://root:example@127.0.0.1:27017/beacon?authSource=admin" --file /data/caseLevelData.json --collection caseLevelData
```

Data Indexing
For the API to respond fast to the queries, you have to index your database. You can create the necessary indexes by running the next script:

```bash
docker exec beaconprod python -m beacon.connections.mongo.reindex
```

**Note:** You will need to run this script each time you inject new data.