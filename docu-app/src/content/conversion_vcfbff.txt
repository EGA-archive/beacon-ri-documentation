
If you do not want to fill the CSV file for the genomicVariations collection or you already have your data in the VCF format, you can convert directly from VCF to BFF.

To convert data from a VCF file to BFF (json) the vcf must be compressed and indexed (.vcf.gz + .vcf.gz.tbi). Beacon2 RI tools v2 will read all the VCF files inside the files_to_read folder. You can convert one or multiple VCF at a time.  

To execute the conversion, use the next command:
$ docker exec -it ri-tools python genomicVariations_vcf.py

This command will do the conversion from VCF to BFF and will load the final BFF documents into a mongoDB inside a container. This is done for memory size usage.



After that, if needed, export your documents from the mongoDB to your machine as a BFF file (json) using two possible commands. The first one will delete an internal "_id" for each record that is generated by mongoDB: 

$ docker exec ri-tools-mongo mongoexport --jsonArray --uri "mongodb://root:example@127.0.0.1:27017/beacon?authSource=admin" --collection genomicVariations | sed '/"_id":/s/"_id":[^,]*,//g' > genomicVariations.json

The second one will keep the "_id" entries generated by mongoDB. Note that this ID is not part of the specifications of the Beacon and will not affect your data and Beacon, you can keep it if you want:

$ docker exec ri-tools-mongo mongoexport --jsonArray --uri "mongodb://root:example@127.0.0.1:27017/beacon?authSource=admin" --collection genomicVariations > genomicVariations.json

This will generate the final BFF file (json) for the genomicVariations collection using the VCF format as source. Bear in mind that this time, the file will be saved in the directory you are located, so if you want to save it in the output_docs folder, add it in the path of the mongoexport (eg. > output_docs/genomicVariations.json).

Note that the records of the variants inside the mongoDB of the Beacon2 RI tools are kept inside after your conversion. If you need to do more conversion and you donâ€™t want to keep the variants inside it, you can remove them by using the next command:
$ docker exec ri-tools-mongo /bin/bash -c 'mongo beacon -u root -p example --authenticationDatabase admin --eval "db.genomicVariations.deleteMany({})"'
At this point in time, you should have your data ready to be injected into the Beacon v2 RI API.

